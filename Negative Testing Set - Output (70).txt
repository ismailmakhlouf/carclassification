/// Sample Images - subdim = 40

>> clear;
path = 'D:\Browser Downloads\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

path = 'D:\Browser Downloads\Cars - Testing\';
listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
        fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
>> clear;
path = 'D:\Browser Downloads\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

path = 'D:\Browser Downloads\Cars - Testing\';
listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    2.4732    2.8393    3.6518    3.4032    3.0801    3.9910

  Columns 7 through 12

    2.7682    2.8884    2.8844    2.9049    2.8487    3.3203

  Columns 13 through 18

    2.5279    3.2318    3.3445    3.2477    2.0928    3.1380

  Columns 19 through 24

    4.1839    2.8144    3.4587    3.8903    2.7421    3.6673

  Columns 25 through 30

    3.8507    3.6431    3.2207    2.8289    2.6158    3.0635

  Columns 31 through 36

    3.2173    3.2480    2.7185    2.8680    3.1553    3.6569

  Columns 37 through 42

    4.1486    3.6230    3.0426    2.9528    3.4489    3.9421

  Columns 43 through 48

    3.4736    3.5980    2.5418    3.4644    3.5740    2.8881

  Columns 49 through 54

    3.0902    3.0767    3.6926    3.4920    3.2793    3.3675

  Columns 55 through 60

    3.2309    3.2728    3.1102    3.6006    3.3030    3.3806

  Columns 61 through 66

    3.6318    2.7978    3.1151    3.3934    3.5715    2.7065

  Columns 67 through 72

    2.8649    3.3507    2.9512    2.6591    3.5001    4.0989

  Columns 73 through 78

    2.9006    3.0004    3.5774    2.6999    2.8132    2.5193

  Columns 79 through 84

    3.4134    2.2366    3.0020    2.6734    2.6149    1.6038

  Columns 85 through 90

    1.5222    3.3376    2.9328    2.9636    3.5945    3.8002

  Columns 91 through 95

    3.3900    2.8398    3.0686    3.2369    3.0030


index =

  Columns 1 through 11

    14    10    27    23    27    20    26    19    14    19    30

  Columns 12 through 22

    23    16    22    14    27    15    29    20    29     1    20

  Columns 23 through 33

    16    16    20    20    20    30    22    27    20    26    15

  Columns 34 through 44

     1    30     1    28    15    24    19    10    24    18    22

  Columns 45 through 55

     2    20    22    23    26    24    19    23    19    15    28

  Columns 56 through 66

    20    19    20    25    15    24    18    10    21    28    19

  Columns 67 through 77

    19    26    15    17    10    18    25    14    24    18    15

  Columns 78 through 88

    22    14    19    13    22    13     4     4    22    23    14

  Columns 89 through 95

    11    11    19    31    23     1    11

    'image_0014.jpg'
    'image_0010.jpg'
    'image_0027.jpg'
    'image_0023.jpg'
    'image_0027.jpg'
    'image_0020.jpg'
    'image_0026.jpg'
    'image_0019.jpg'
    'image_0014.jpg'
    'image_0019.jpg'
    'image_0030.jpg'
    'image_0023.jpg'
    'image_0016.jpg'
    'image_0022.jpg'
    'image_0014.jpg'
    'image_0027.jpg'
    'image_0015.jpg'
    'image_0029.jpg'
    'image_0020.jpg'
    'image_0029.jpg'
    'image_0001.jpg'
    'image_0020.jpg'
    'image_0016.jpg'
    'image_0016.jpg'
    'image_0020.jpg'
    'image_0020.jpg'
    'image_0020.jpg'
    'image_0030.jpg'
    'image_0022.jpg'
    'image_0027.jpg'
    'image_0020.jpg'
    'image_0026.jpg'
    'image_0015.jpg'
    'image_0001.jpg'
    'image_0030.jpg'
    'image_0001.jpg'
    'image_0028.jpg'
    'image_0015.jpg'
    'image_0024.jpg'
    'image_0019.jpg'
    'image_0010.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0022.jpg'
    'image_0002.jpg'
    'image_0020.jpg'
    'image_0022.jpg'
    'image_0023.jpg'
    'image_0026.jpg'
    'image_0024.jpg'
    'image_0019.jpg'
    'image_0023.jpg'
    'image_0019.jpg'
    'image_0015.jpg'
    'image_0028.jpg'
    'image_0020.jpg'
    'image_0019.jpg'
    'image_0020.jpg'
    'image_0025.jpg'
    'image_0015.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0010.jpg'
    'image_0021.jpg'
    'image_0028.jpg'
    'image_0019.jpg'
    'image_0019.jpg'
    'image_0026.jpg'
    'image_0015.jpg'
    'image_0017.jpg'
    'image_0010.jpg'
    'image_0018.jpg'
    'image_0025.jpg'
    'image_0014.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0015.jpg'
    'image_0022.jpg'
    'image_0014.jpg'
    'image_0019.jpg'
    'image_0013.jpg'
    'image_0022.jpg'
    'image_0013.jpg'
    'image_0004.jpg'
    'image_0004.jpg'
    'image_0022.jpg'
    'image_0023.jpg'
    'image_0014.jpg'
    'image_0011.jpg'
    'image_0011.jpg'
    'image_0019.jpg'
    'image_0031.jpg'
    'image_0023.jpg'
    'image_0001.jpg'
    'image_0011.jpg'

>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Testing\';
path = 'C:\Users\Public\Pictures\Sample Pictures';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
??? Error using ==> imread at 374
File "C:\Users\Public\Pictures\Sample PicturesChrysanthemum.jpg"
does not exist.
 
>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Testing\';
path = 'C:\Users\Public\Pictures\Sample Pictures\';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    2.9723    2.9224    5.2214    2.9288    4.3347    4.5461

  Columns 7 through 12

    2.4255    3.4493    2.4015    4.2752    3.3493    3.7412

  Columns 13 through 18

    2.8149    4.5811    4.6479    4.5495    3.3451    4.6312

  Columns 19 through 24

    5.1083    4.3727    4.2467    4.8592    2.8218    4.4986

  Columns 25 through 30

    4.0820    3.8545    3.9249    3.4531    3.6153    3.6122

  Columns 31 through 36

    4.0446    3.2049    4.7503    3.0521    3.5025    4.1221

  Columns 37 through 42

    4.7865    4.7543    3.9552    3.3684    4.2636    3.7955

  Columns 43 through 48

    4.0463    4.3877    3.4174    4.1230    3.8360    4.3734

  Columns 49 through 54

    3.1596    3.2968    3.9767    4.2291    3.7450    4.5574

  Columns 55 through 60

    3.7822    3.7364    3.3402    3.8904    3.4540    3.7292

  Columns 61 through 66

    4.3251    4.2590    3.0657    3.4206    4.1970    3.4125

  Columns 67 through 72

    3.5269    3.7680    4.1236    3.1848    3.7311    4.7129

  Columns 73 through 78

    3.5828    3.0603    4.6135    4.4238    3.3093    3.6562

  Columns 79 through 84

    3.3477    3.3880    3.2811    2.6249    2.4092    4.6679

  Columns 85 through 90

    4.0677    4.2013    3.7478    3.4948    4.1611    4.6729

  Columns 91 through 95

    3.9721    3.4659    3.5163    3.8404    3.4105


index =

  Columns 1 through 11

     5     1     1     5     5     5     5     8     5     5     5

  Columns 12 through 22

     1     1     5     5     5     5     5     5     1     5     5

  Columns 23 through 33

     1     1     8     3     5     5     5     5     5     5     5

  Columns 34 through 44

     5     5     5     1     1     5     1     5     5     3     5

  Columns 45 through 55

     5     1     5     1     5     5     1     5     5     5     5

  Columns 56 through 66

     5     2     5     1     5     5     5     2     2     1     1

  Columns 67 through 77

     2     5     5     5     5     1     1     5     3     1     5

  Columns 78 through 88

     5     5     7     5     5     5     5     5     5     5     5

  Columns 89 through 95

     5     5     1     5     5     5     5

    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0008.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0008.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0002.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0007.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'

>> 

////// - Screenshots - subdim = 70


Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
>> clear;
path = 'D:\Browser Downloads\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

path = 'D:\Browser Downloads\Cars - Testing\';
listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    2.4732    2.8393    3.6518    3.4032    3.0801    3.9910

  Columns 7 through 12

    2.7682    2.8884    2.8844    2.9049    2.8487    3.3203

  Columns 13 through 18

    2.5279    3.2318    3.3445    3.2477    2.0928    3.1380

  Columns 19 through 24

    4.1839    2.8144    3.4587    3.8903    2.7421    3.6673

  Columns 25 through 30

    3.8507    3.6431    3.2207    2.8289    2.6158    3.0635

  Columns 31 through 36

    3.2173    3.2480    2.7185    2.8680    3.1553    3.6569

  Columns 37 through 42

    4.1486    3.6230    3.0426    2.9528    3.4489    3.9421

  Columns 43 through 48

    3.4736    3.5980    2.5418    3.4644    3.5740    2.8881

  Columns 49 through 54

    3.0902    3.0767    3.6926    3.4920    3.2793    3.3675

  Columns 55 through 60

    3.2309    3.2728    3.1102    3.6006    3.3030    3.3806

  Columns 61 through 66

    3.6318    2.7978    3.1151    3.3934    3.5715    2.7065

  Columns 67 through 72

    2.8649    3.3507    2.9512    2.6591    3.5001    4.0989

  Columns 73 through 78

    2.9006    3.0004    3.5774    2.6999    2.8132    2.5193

  Columns 79 through 84

    3.4134    2.2366    3.0020    2.6734    2.6149    1.6038

  Columns 85 through 90

    1.5222    3.3376    2.9328    2.9636    3.5945    3.8002

  Columns 91 through 95

    3.3900    2.8398    3.0686    3.2369    3.0030


index =

  Columns 1 through 11

    14    10    27    23    27    20    26    19    14    19    30

  Columns 12 through 22

    23    16    22    14    27    15    29    20    29     1    20

  Columns 23 through 33

    16    16    20    20    20    30    22    27    20    26    15

  Columns 34 through 44

     1    30     1    28    15    24    19    10    24    18    22

  Columns 45 through 55

     2    20    22    23    26    24    19    23    19    15    28

  Columns 56 through 66

    20    19    20    25    15    24    18    10    21    28    19

  Columns 67 through 77

    19    26    15    17    10    18    25    14    24    18    15

  Columns 78 through 88

    22    14    19    13    22    13     4     4    22    23    14

  Columns 89 through 95

    11    11    19    31    23     1    11

    'image_0014.jpg'
    'image_0010.jpg'
    'image_0027.jpg'
    'image_0023.jpg'
    'image_0027.jpg'
    'image_0020.jpg'
    'image_0026.jpg'
    'image_0019.jpg'
    'image_0014.jpg'
    'image_0019.jpg'
    'image_0030.jpg'
    'image_0023.jpg'
    'image_0016.jpg'
    'image_0022.jpg'
    'image_0014.jpg'
    'image_0027.jpg'
    'image_0015.jpg'
    'image_0029.jpg'
    'image_0020.jpg'
    'image_0029.jpg'
    'image_0001.jpg'
    'image_0020.jpg'
    'image_0016.jpg'
    'image_0016.jpg'
    'image_0020.jpg'
    'image_0020.jpg'
    'image_0020.jpg'
    'image_0030.jpg'
    'image_0022.jpg'
    'image_0027.jpg'
    'image_0020.jpg'
    'image_0026.jpg'
    'image_0015.jpg'
    'image_0001.jpg'
    'image_0030.jpg'
    'image_0001.jpg'
    'image_0028.jpg'
    'image_0015.jpg'
    'image_0024.jpg'
    'image_0019.jpg'
    'image_0010.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0022.jpg'
    'image_0002.jpg'
    'image_0020.jpg'
    'image_0022.jpg'
    'image_0023.jpg'
    'image_0026.jpg'
    'image_0024.jpg'
    'image_0019.jpg'
    'image_0023.jpg'
    'image_0019.jpg'
    'image_0015.jpg'
    'image_0028.jpg'
    'image_0020.jpg'
    'image_0019.jpg'
    'image_0020.jpg'
    'image_0025.jpg'
    'image_0015.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0010.jpg'
    'image_0021.jpg'
    'image_0028.jpg'
    'image_0019.jpg'
    'image_0019.jpg'
    'image_0026.jpg'
    'image_0015.jpg'
    'image_0017.jpg'
    'image_0010.jpg'
    'image_0018.jpg'
    'image_0025.jpg'
    'image_0014.jpg'
    'image_0024.jpg'
    'image_0018.jpg'
    'image_0015.jpg'
    'image_0022.jpg'
    'image_0014.jpg'
    'image_0019.jpg'
    'image_0013.jpg'
    'image_0022.jpg'
    'image_0013.jpg'
    'image_0004.jpg'
    'image_0004.jpg'
    'image_0022.jpg'
    'image_0023.jpg'
    'image_0014.jpg'
    'image_0011.jpg'
    'image_0011.jpg'
    'image_0019.jpg'
    'image_0031.jpg'
    'image_0023.jpg'
    'image_0001.jpg'
    'image_0011.jpg'

>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Testing\';
path = 'C:\Users\Public\Pictures\Sample Pictures';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
??? Error using ==> imread at 374
File "C:\Users\Public\Pictures\Sample PicturesChrysanthemum.jpg"
does not exist.
 
>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Testing\';
path = 'C:\Users\Public\Pictures\Sample Pictures\';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    2.9723    2.9224    5.2214    2.9288    4.3347    4.5461

  Columns 7 through 12

    2.4255    3.4493    2.4015    4.2752    3.3493    3.7412

  Columns 13 through 18

    2.8149    4.5811    4.6479    4.5495    3.3451    4.6312

  Columns 19 through 24

    5.1083    4.3727    4.2467    4.8592    2.8218    4.4986

  Columns 25 through 30

    4.0820    3.8545    3.9249    3.4531    3.6153    3.6122

  Columns 31 through 36

    4.0446    3.2049    4.7503    3.0521    3.5025    4.1221

  Columns 37 through 42

    4.7865    4.7543    3.9552    3.3684    4.2636    3.7955

  Columns 43 through 48

    4.0463    4.3877    3.4174    4.1230    3.8360    4.3734

  Columns 49 through 54

    3.1596    3.2968    3.9767    4.2291    3.7450    4.5574

  Columns 55 through 60

    3.7822    3.7364    3.3402    3.8904    3.4540    3.7292

  Columns 61 through 66

    4.3251    4.2590    3.0657    3.4206    4.1970    3.4125

  Columns 67 through 72

    3.5269    3.7680    4.1236    3.1848    3.7311    4.7129

  Columns 73 through 78

    3.5828    3.0603    4.6135    4.4238    3.3093    3.6562

  Columns 79 through 84

    3.3477    3.3880    3.2811    2.6249    2.4092    4.6679

  Columns 85 through 90

    4.0677    4.2013    3.7478    3.4948    4.1611    4.6729

  Columns 91 through 95

    3.9721    3.4659    3.5163    3.8404    3.4105


index =

  Columns 1 through 11

     5     1     1     5     5     5     5     8     5     5     5

  Columns 12 through 22

     1     1     5     5     5     5     5     5     1     5     5

  Columns 23 through 33

     1     1     8     3     5     5     5     5     5     5     5

  Columns 34 through 44

     5     5     5     1     1     5     1     5     5     3     5

  Columns 45 through 55

     5     1     5     1     5     5     1     5     5     5     5

  Columns 56 through 66

     5     2     5     1     5     5     5     2     2     1     1

  Columns 67 through 77

     2     5     5     5     5     1     1     5     3     1     5

  Columns 78 through 88

     5     5     7     5     5     5     5     5     5     5     5

  Columns 89 through 95

     5     5     1     5     5     5     5

    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0008.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0008.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0002.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0007.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'

>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 40;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail's Folder\AUC\CS 485 - Assignment 3';
path = 'C:\Users\Public\Pictures\Sample Pictures\';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    2.9723    2.9224    5.2214    2.9288    4.3347    4.5461

  Columns 7 through 12

    2.4255    3.4493    2.4015    4.2752    3.3493    3.7412

  Columns 13 through 18

    2.8149    4.5811    4.6479    4.5495    3.3451    4.6312

  Columns 19 through 24

    5.1083    4.3727    4.2467    4.8592    2.8218    4.4986

  Columns 25 through 30

    4.0820    3.8545    3.9249    3.4531    3.6153    3.6122

  Columns 31 through 36

    4.0446    3.2049    4.7503    3.0521    3.5025    4.1221

  Columns 37 through 42

    4.7865    4.7543    3.9552    3.3684    4.2636    3.7955

  Columns 43 through 48

    4.0463    4.3877    3.4174    4.1230    3.8360    4.3734

  Columns 49 through 54

    3.1596    3.2968    3.9767    4.2291    3.7450    4.5574

  Columns 55 through 60

    3.7822    3.7364    3.3402    3.8904    3.4540    3.7292

  Columns 61 through 66

    4.3251    4.2590    3.0657    3.4206    4.1970    3.4125

  Columns 67 through 72

    3.5269    3.7680    4.1236    3.1848    3.7311    4.7129

  Columns 73 through 78

    3.5828    3.0603    4.6135    4.4238    3.3093    3.6562

  Columns 79 through 84

    3.3477    3.3880    3.2811    2.6249    2.4092    4.6679

  Columns 85 through 90

    4.0677    4.2013    3.7478    3.4948    4.1611    4.6729

  Columns 91 through 95

    3.9721    3.4659    3.5163    3.8404    3.4105


index =

  Columns 1 through 11

     5     1     1     5     5     5     5     8     5     5     5

  Columns 12 through 22

     1     1     5     5     5     5     5     5     1     5     5

  Columns 23 through 33

     1     1     8     3     5     5     5     5     5     5     5

  Columns 34 through 44

     5     5     5     1     1     5     1     5     5     3     5

  Columns 45 through 55

     5     1     5     1     5     5     1     5     5     5     5

  Columns 56 through 66

     5     2     5     1     5     5     5     2     2     1     1

  Columns 67 through 77

     2     5     5     5     5     1     1     5     3     1     5

  Columns 78 through 88

     5     5     7     5     5     5     5     5     5     5     5

  Columns 89 through 95

     5     5     1     5     5     5     5

    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0008.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0008.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0002.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0007.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'

>> clear;
path = 'D:\Ismail''s Folder\AUC\CS 585 - Assignment 2\Cars - Training\';
listing = dir(fullfile(path, '*.jpg'));
% sum =zeros(0, 0);


x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenames = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenames;
end

sumx = transpose(sumx);

clear filenames;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAll = sumx;
trainList = listAll;
 
% Constants 
numIm = length(trainList); 
subDim = 70;
 
 
% Memory allocation for DATA matrix 
fprintf('Creating DATA matrix\n') 
tmp = imread ( [path char(listAll(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATA = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATA matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAll(i))] );
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATA(:, i) = reshape (im, m*n, 1); 
end; 
save DATA DATA; 
clear im; 
 
% Creating training images space 
fprintf('Creating training images space\n') 
dim = length (trainList); 
imSpace = zeros (m*n, dim); 
for i = 1 : dim 
    index = strmatch (trainList(i), listAll); 
    imSpace(:, i) = DATA(:, index); 
end; 
save imSpace imSpace; 
clear DATA; 
 
% Calculating mean face from training images 
fprintf('Zero mean\n') 
psi = mean(double(imSpace'))'; 
save psi psi; 
 
% Zero mean 
zeroMeanSpace = zeros(size(imSpace)); 
for i = 1 : dim 
    zeroMeanSpace(:, i) = double(imSpace(:, i)) - psi; 
end; 
save zeroMeanSpace zeroMeanSpace; 
% clear imSpace; 
 
% PCA 
fprintf('PCA\n') 
L = zeroMeanSpace' * zeroMeanSpace;         % Turk-Pentland trick (part 1) 
[eigVecs, eigVals] = eig(L); 
 
diagonal = diag(eigVals); 
[diagonal, index] = sort(diagonal); 
index = flipud(index); 
  
pcaEigVals = zeros(size(eigVals)); 
for i = 1 : size(eigVals, 1) 
    pcaEigVals(i, i) = eigVals(index(i), index(i)); 
    pcaEigVecs(:, i) = eigVecs(:, index(i)); 
end; 
 
pcaEigVals = diag(pcaEigVals); 
pcaEigVals = pcaEigVals / (dim-1); 
pcaEigVals = pcaEigVals(1 : subDim);        % Retaining only the largest subDim ones 
 
pcaEigVecs = zeroMeanSpace * pcaEigVecs;    % Turk-Pentland trick (part 2) 
 
save pcaEigVals pcaEigVals; 
 
% Normalisation to unit length 
fprintf('Normalising\n') 
for i = 1 : dim 
    pcaEigVecs(:, i) = pcaEigVecs(:, i) / norm(pcaEigVecs(:, i)); 
end; 
 
% Dimensionality reduction.  
fprintf('Creating lower dimensional subspace\n') 
w = pcaEigVecs(:, 1:subDim); 
save w w; 
clear w; 
 
% Subtract mean face from all images 
load DATA; 
load psi; 
zeroMeanDATA = zeros(size(DATA)); 
for i = 1 : size(DATA, 2) 
    zeroMeanDATA(:, i) = double(DATA(:, i)) - psi; 
end; 
% clear psi; 
% clear DATA; 
 
% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting all images onto a new lower dimensional subspace\n') 
load w; 
pcaProj = w' * zeroMeanDATA; 
% clear w; 
% clear zeroMeanDATA; 
save pcaProj pcaProj;

%%%% Projecting new image(s) onto subspace

% path = 'D:\Ismail's Folder\AUC\CS 485 - Assignment 3';
path = 'C:\Users\Public\Pictures\Sample Pictures\';

listing = dir(fullfile(path, '*.jpg'));

x = length(listing);
sumx = {};
% filenames = zeros(size(listing));
for i=1:numel(listing)
   filenamesnew = listing(i).name;
%     sum = [sum; filenames];
sumx{i} = filenamesnew;
end

sumx = transpose(sumx);

clear filenamesnew;
% save listAll sum;

% if nargin < 3 
%     subDim = dim - 1; 
% end; 
 
 
disp(' ') 
 
% load listAll; 

listAllnew = sumx;
testList = listAllnew;
 
% Constants 
numIm = length(testList); 
%subDim = 200;
 
 
% Memory allocation for DATANEW matrix 
fprintf('Creating DATANEW matrix\n') 
tmp = imread ( [path char(listAllnew(1))] ); 
% [m, n] = size (tmp);                    % image size - used later also!!! 
m = 64;
n = 64;
DATANEW = uint8 (zeros(m*n, numIm));       % Memory allocated 
clear str tmp; 
 
% Creating DATANEW matrix 
for i = 1 : numIm 
    im2 = imread ( [path char(listAllnew(i))] ); 
    im2 = rgb2gray(im2);
    im = imresize(im2, [m n]);
    DATANEW(:, i) = reshape (im, m*n, 1); 
end; 
save DATANEW DATANEW; 
clear im; 

% Subtract mean face from new image(s) 
load DATANEW; 
load psi; 
zeroMeanDATAnew = zeros(size(DATANEW)); 
for i = 1 : size(DATANEW, 2) 
    zeroMeanDATAnew(:, i) = double(DATANEW(:, i)) - psi; 
end; 
% clear psi; 
% clear DATANEW; 

% Project all images onto a new lower dimensional subspace (w) 
fprintf('Projecting new image(s) onto a new lower dimensional subspace\n') 
load w; 
pcaProjnew = w' * zeroMeanDATAnew; 
% clear w; 
% clear zeroMeanDATAnew; 
save pcaProjnew pcaProjnew;

% Calculate Euclidean distance between new image(s) and current images

load pcaProj;
load pcaProjnew;
load w;
% diff = zeros(size(pcaProj));


% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff;
% %     end;
% end;
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     sumdiff2(i) = sumdiff2(i) + diff(j,i);
%      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = norm(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
% %     for j = 1 : size(pcaProjnew, 1)
%     diff(i) = dist(pcaProjnew - pcaProj(i));
%     sumdiff2(i) = sumdiff2(i) + diff(i);
% %      end;
% end;

% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%     for j = 1 : size(pcaProjnew, 1)
%     diff(i,j) = sqrt(sum((pcaProjnew(:,i) - pcaProj(:,j)) .^ 2));
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      end;
%      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;
% for i = 1 : size(pcaProj, 2)
% %     for j = 1 : size(pcaProjnew, 1) 
% %     diff(j, i) = norm(pcaProjnew(j) - pcaProj(j, i));
%    
%     dis(i) = pcaProj(i,:) - pcaProjnew;
%     diff(i) = sqrt(dis * dis');
% %     sumdiff2(i) = sumdiff2(i) + diff(i,j);
%      
% %      sumdiff2(i) = sumdiff2(i) + sum(diff(i,:));
% end;

% % Calculating mean face from training images 
% fprintf('Zero mean\n') 
% psi = mean(double(pcaProj'))'; 
% save psi psi; 
 
% % Zero mean - Works
% diff = zeros(size(pcaProj)); 
% for i = 1 : dim 
%     diff(:, i) = double(pcaProj(:, i)) - pcaProjnew; 
% %     sumdiff2(i) = sum(diff(:,i));
% end; 
% % save zeroMeanSpace zeroMeanSpace; 
% % clear imSpace; 
% sumdiff2 = sum(diff); 



% Works

% diff = zeros(size(pcaProj));
% sumdiff2 = zeros(size(diagonal'));
% sqrtdiff2 = zeros(size(diagonal'));
% for i = 1 : size(pcaProj, 2)
%     for j = 1 : size(pcaProjnew, 1) 
%     diff(j, i) = (pcaProjnew(j) - pcaProj(j, i))^2;
% %     diff = norm(pcaProjnew - pcaProj(:,i));
%     sumdiff2(i) = sumdiff2(i) + diff(j, i);
%     end;
%     sqrtdiff2(i) = sqrt(sumdiff2(i));
% end;
% 
% 
% [smallsumdiff, index] = min(sumdiff2);
% display(index);
% display(listAll(index));



reconzero = zeros(size(imSpace)); 
recon = zeros(size(imSpace));
reconzero = w*pcaProj;
for i = 1 : dim 
    recon(:, i) = double(reconzero(:, i)) + psi; 
end; 

% reconzeronew = zeros(size(psi)); 
% reconnew = zeros(size(psi));
reconzeronew = w*pcaProjnew;

fprintf('Training Reconstruction complete\n');

for i = 1 : size(testList, 1)
reconnew(:, i) = double(reconzeronew(:,i)) + psi; 
end;

fprintf('Testing Reconstruction complete\n');

% Works - Produces undesirable results
diff = zeros(size(recon));
sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
for k = 1: size(reconnew, 2) % 31
    for i = 1 : size(recon, 2) % 95
        for j = 1 : size(reconnew, 1)  % 4096
        diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
        sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
        end;
        sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');

%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
    end;

%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sqrtdiff2(k,i));
%     display(index);
%     display(listAll(index));
fprintf('Differences calculated \n')
end;
[smallsumdiff, index] = min(sqrtdiff2);
display(smallsumdiff);
display(index);
display(listAll(index));


%% Multiple - Needs work
% diff = zeros(size(recon));
% sumdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% sqrtdiff2 = zeros(size(reconnew, 2), size(recon, 2));
% for k = 1: size(reconnew, 2) % 31
%     for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j,k) - recon(j, i))^2;
%         sumdiff2(k, i) = sumdiff2(k, i) + diff(j, i);
%         end;
%         sqrtdiff2(k, i) = sqrt(sumdiff2(k, i));
%         fprintf('Differences calculated \n');
% 
%         [smallsumdiff, index] = min(sqrtdiff2(k));
%         display(index);
%         display(listAll(index));
%     end;
% 
% %     fprintf('Differences calculated \n');
% % 
% %     [smallsumdiff, index] = min(sqrtdiff2(k,i));
% %     display(index);
% %     display(listAll(index));
% end;

% Correct for one testing image
% for i = 1 : size(recon, 2) % 95
%         for j = 1 : size(reconnew, 1)  % 4096
%         diff(j, i) = (reconnew(j) - recon(j, i))^2;
%         sumdiff2(i) = sumdiff2(i) + diff(j, i);
%         end;
%         sqrtdiff2(i) = sqrt(sumdiff2(i));
%     end;
% 
%     fprintf('Differences calculated \n');
% 
%     [smallsumdiff, index] = min(sumdiff2);
%     display(index);
%     display(listAll(index));

% contents = dir(fullfile(path, '*.pgm'));
% count = 0;
% sum =zeros(0, 0);
% 
% for i = 1:numel(contents)
%     filename = contents(i).name;
%     % Open the file specified in filename, do your processing...
%     imgPath = strcat(path,'\',filename);
%     A = imread(imgPath);
%    % image(A);
%     A = reshape(A,64*64,1);
%    % display(imgPath);
%     sum = [sum A];
%     count = count +1;
%     %display(sum);
% end
% %display(sum);
% [coeff,score,latent] = princomp(sum)
 
Creating DATA matrix
Creating training images space
Zero mean
PCA
Normalising
Creating lower dimensional subspace
Projecting all images onto a new lower dimensional subspace
 
Creating DATANEW matrix
Projecting new image(s) onto a new lower dimensional subspace
Training Reconstruction complete
Testing Reconstruction complete
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 
Differences calculated 

smallsumdiff =

  1.0e+003 *

  Columns 1 through 6

    3.2490    3.2063    5.4334    3.3612    4.6390    4.7990

  Columns 7 through 12

    2.7228    3.7623    2.9542    4.4922    3.5342    3.9568

  Columns 13 through 18

    3.1194    4.8360    5.0342    4.7811    3.7050    4.7979

  Columns 19 through 24

    5.2110    4.5706    4.5611    5.1829    3.0436    4.6570

  Columns 25 through 30

    4.3173    4.2063    4.3076    3.7757    3.8426    3.9141

  Columns 31 through 36

    4.4347    3.7391    5.0767    3.3325    3.8177    4.3888

  Columns 37 through 42

    4.8608    4.9446    4.4004    3.6222    4.5058    4.1146

  Columns 43 through 48

    4.2038    4.6390    3.8527    4.3352    4.2203    4.5741

  Columns 49 through 54

    3.6099    3.7476    4.0937    4.5385    4.1304    4.7732

  Columns 55 through 60

    4.0210    4.1034    3.6268    4.2775    3.8510    4.1069

  Columns 61 through 66

    4.6811    4.5414    3.4883    3.7375    4.3406    3.7246

  Columns 67 through 72

    3.9190    4.1651    4.4872    3.7096    4.1058    4.8669

  Columns 73 through 78

    3.8898    3.5304    4.8514    4.6670    3.6684    3.9448

  Columns 79 through 84

    3.6163    3.5432    3.5330    2.9184    2.8132    4.8199

  Columns 85 through 90

    4.2879    4.4663    4.0286    4.0256    4.4483    4.9375

  Columns 91 through 95

    4.1383    3.7277    3.8307    4.2337    3.7651


index =

  Columns 1 through 11

     5     1     1     5     5     5     5     8     5     1     8

  Columns 12 through 22

     1     1     5     5     5     5     5     5     1     5     5

  Columns 23 through 33

     1     1     8     3     5     5     7     5     5     5     5

  Columns 34 through 44

     5     5     5     1     1     5     1     5     5     3     5

  Columns 45 through 55

     1     1     5     1     5     5     1     1     7     5     5

  Columns 56 through 66

     5     2     5     1     5     5     5     2     2     1     1

  Columns 67 through 77

     2     5     1     5     1     1     1     5     3     1     5

  Columns 78 through 88

     5     5     8     5     5     5     1     5     5     5     5

  Columns 89 through 95

     5     5     1     5     5     5     5

    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0008.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0008.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0008.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0007.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0007.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0002.jpg'
    'image_0002.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0002.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0003.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0008.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0001.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'
    'image_0005.jpg'

>> 